diff -urN fzf.vim.original/autoload/fzf/vim.vim fzf.vim/autoload/fzf/vim.vim
--- fzf.vim.original/autoload/fzf/vim.vim	2020-11-21 15:08:03.567536527 +0100
+++ fzf.vim/autoload/fzf/vim.vim	2020-11-21 19:18:46.893428563 +0100
@@ -1231,6 +1231,69 @@
 endfunction
 
 " ------------------------------------------------------------------
+" fzf#vim#cscope(option, query)
+" fzf#vim#cscope_query(option)
+" ------------------------------------------------------------------
+function! s:cscope_sink(lines)
+  if len(a:lines) < 2
+    return
+  endif
+  normal! m'
+  let cmd = s:action_for(a:lines[0], 'e')
+  for line in a:lines[1:]
+    let file = split(split(line, " ")[0], ":")
+    execute 'silent' cmd file[0]
+	execute 'silent' file[1]
+  endfor
+  normal! zvzz
+endfunction
+
+function! fzf#vim#cscope(option, query, ...)
+  let opts = {
+  \ 'source': "cscope -dL" . a:option . " " . a:query . " | awk '{ s = \$1\":\"\$3\"^\"\$2\"^\"; for (i = 4; i <= NF; i++) s = s \$i \" \"; print s }' | column -t -s \"^\"",
+  \ 'options': ['--ansi', '--prompt', '> ',
+  \             '--delimiter', '[ :]', '-m',
+  \             '--preview-window', '+{2}-/2'],
+  \ 'down': '40%',
+  \ 'column': 0,
+  \ 'sink*': s:function('s:cscope_sink'),
+  \ }
+  return s:fzf('cscope', opts, a:000)
+endfunction
+
+function! fzf#vim#cscope_query(option, ...)
+  call inputsave()
+  if a:option == '0'
+    let query = input('C symbol: ')
+  elseif a:option == '1'
+    let query = input('Global defintion: ')
+  elseif a:option == '2'
+    let query = input('Functions called: ')
+  elseif a:option == '3'
+    let query = input('Functions calling: ')
+  elseif a:option == '4'
+    let query = input('Text string: ')
+  elseif a:option == '6'
+    let query = input('Egrep: ')
+  elseif a:option == '7'
+    let query = input('File: ')
+  elseif a:option == '8'
+    let query = input('Files #including this file: ')
+  elseif a:option == '9'
+    let query = input('Assignments: ')
+  else
+    echo "Invalid option!"
+    return
+  endif
+  call inputrestore()
+  if query != ""
+    call call("fzf#vim#cscope", [ a:option, query ] + a:000)
+  else
+    echom "Cancelled Search!"
+  endif
+endfunction
+
+" ------------------------------------------------------------------
 " fzf#vim#maps(mode, opts[with count and op])
 " ------------------------------------------------------------------
 function! s:align_pairs(list)
Binary files fzf.vim.original/.git/index and fzf.vim/.git/index differ
diff -urN fzf.vim.original/plugin/fzf.vim fzf.vim/plugin/fzf.vim
--- fzf.vim.original/plugin/fzf.vim	2020-11-21 15:08:03.623539199 +0100
+++ fzf.vim/plugin/fzf.vim	2020-11-21 18:06:43.893692414 +0100
@@ -65,6 +65,24 @@
 \'command!      -bang -nargs=* Rg                        call fzf#vim#grep("rg --column --line-number --no-heading --color=always --smart-case -- ".shellescape(<q-args>), 1, s:p(), <bang>0)',
 \'command!      -bang -nargs=* Tags                      call fzf#vim#tags(<q-args>, <bang>0)',
 \'command!      -bang -nargs=* BTags                     call fzf#vim#buffer_tags(<q-args>, s:p({ "placeholder": "{2}:{3}" }), <bang>0)',
+\'command!      -bang -nargs=* Cscope0                   call fzf#vim#cscope("0", <q-args>, s:p(), <bang>0)',
+\'command!      -bang -nargs=* Cscope1                   call fzf#vim#cscope("1", <q-args>, s:p(), <bang>0)',
+\'command!      -bang -nargs=* Cscope2                   call fzf#vim#cscope("2", <q-args>, s:p(), <bang>0)',
+\'command!      -bang -nargs=* Cscope3                   call fzf#vim#cscope("3", <q-args>, s:p(), <bang>0)',
+\'command!      -bang -nargs=* Cscope4                   call fzf#vim#cscope("4", <q-args>, s:p(), <bang>0)',
+\'command!      -bang -nargs=* Cscope6                   call fzf#vim#cscope("6", <q-args>, s:p(), <bang>0)',
+\'command!      -bang -nargs=* Cscope7                   call fzf#vim#cscope("7", <q-args>, s:p(), <bang>0)',
+\'command!      -bang -nargs=* Cscope8                   call fzf#vim#cscope("8", <q-args>, s:p(), <bang>0)',
+\'command!      -bang -nargs=* Cscope9                   call fzf#vim#cscope("9", <q-args>, s:p(), <bang>0)',
+\'command!      -bang -nargs=* CscopeQuery0              call fzf#vim#cscope_query("0", s:p(), <bang>0)',
+\'command!      -bang -nargs=* CscopeQuery1              call fzf#vim#cscope_query("1", s:p(), <bang>0)',
+\'command!      -bang -nargs=* CscopeQuery2              call fzf#vim#cscope_query("2", s:p(), <bang>0)',
+\'command!      -bang -nargs=* CscopeQuery3              call fzf#vim#cscope_query("3", s:p(), <bang>0)',
+\'command!      -bang -nargs=* CscopeQuery4              call fzf#vim#cscope_query("4", s:p(), <bang>0)',
+\'command!      -bang -nargs=* CscopeQuery6              call fzf#vim#cscope_query("6", s:p(), <bang>0)',
+\'command!      -bang -nargs=* CscopeQuery7              call fzf#vim#cscope_query("7", s:p(), <bang>0)',
+\'command!      -bang -nargs=* CscopeQuery8              call fzf#vim#cscope_query("8", s:p(), <bang>0)',
+\'command!      -bang -nargs=* CscopeQuery9              call fzf#vim#cscope_query("9", s:p(), <bang>0)',
 \'command! -bar -bang Snippets                           call fzf#vim#snippets(<bang>0)',
 \'command! -bar -bang Commands                           call fzf#vim#commands(<bang>0)',
 \'command! -bar -bang Marks                              call fzf#vim#marks(<bang>0)',
